server.port=8081

# Database configuration for Docker
spring.datasource.url=jdbc:postgresql://postgres-auth:5432/authdb
spring.datasource.username=admin
spring.datasource.password=${POSTGRES_PASSWORD:admin123}

# Database connection pool settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# JWT Configuration
jwt.secret=${JWT_SECRET:mysecretkeymysecretkeymysecretkey123456}
jwt.expiration-ms=86400000

# JPA/Hibernate configuration - PRODUCTION
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# SQL initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:init.sql

# Logging - PRODUCTION
logging.level.root=INFO
logging.level.com.bankportal.authservice=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.web=WARN

# =================================
# ACTUATOR & MONITORING - VOLLSTÄNDIG
# =================================
# Management Endpoints - PROMETHEUS HINZUFÜGEN!
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoints.web.base-path=/actuator
management.endpoints.enabled-by-default=false

# Individual Endpoint Configuration
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.info.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.metrics.enabled=true

# Health Indicators
management.health.db.enabled=true
management.health.diskspace.enabled=true

# KRITISCH: Prometheus Metrics aktivieren
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=auth-service

# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true

# Enable detailed error messages
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=true

# =================================
# APPLICATION INFO (für /actuator/info)
# =================================
info.app.name=Bank Portal Auth Service
info.app.description=Authentication and Authorization Service for Bank Portal
info.app.version=1.0.0
info.app.encoding=UTF-8
info.java.version=${java.version}
info.profile=production
debug=true