# Kubernetes Profile - PostgreSQL Database
server.port=8082

# Database configuration for Kubernetes
# Uses environment variables from ConfigMap and Secrets
spring.datasource.url=jdbc:postgresql://${POSTGRES_ACCOUNT_HOST:postgres-account-service}:${POSTGRES_ACCOUNT_PORT:5432}/${POSTGRES_ACCOUNT_DB:accountdb}
spring.datasource.username=${POSTGRES_ACCOUNT_USER:admin}
spring.datasource.password=${POSTGRES_ACCOUNT_PASSWORD:admin}

# Database connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# External Service URLs
auth.service.url=${AUTH_SERVICE_URL:http://auth-service:8081}

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# SQL initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:init.sql

# Logging for production
logging.level.org.hibernate.SQL=warn
logging.level.com.bankportal.accountservice=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=warn

# Actuator f√ºr Health Checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.db.enabled=true

# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true

# Enable detailed error messages
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=true
