services:
  # PostgreSQL für Auth Service
  postgres-auth:
    image: postgres:15-alpine
    container_name: bankportal-postgres-auth
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin123}
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - bankportal-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d authdb" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # PostgreSQL für Account Service
  postgres-account:
    image: postgres:15-alpine
    container_name: bankportal-postgres-account
    environment:
      POSTGRES_DB: accountdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin123}
    volumes:
      - postgres_account_data:/var/lib/postgresql/data
    networks:
      - bankportal-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d accountdb" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Redis
  redis:
    image: redis:7-alpine
    container_name: bankportal-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - bankportal-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    image: bankportal-auth-service:latest
    container_name: bankportal-auth-service
    ports:
      - "${AUTH_SERVICE_PORT:-8081}:8081"
    environment:
      SPRING_PROFILES_ACTIVE: production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin123}
      JWT_SECRET: ${JWT_SECRET:-mysecretkeymysecretkeymysecretkey123456}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:4200,http://localhost}
      JAVA_OPTS: >-
        -Xms256m -Xmx512m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Dspring.profiles.active=production
      LOGGING_LEVEL_ROOT: WARN
      LOGGING_LEVEL_COM_BANKPORTAL: INFO
    networks:
      - bankportal-network
    depends_on:
      postgres-auth:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Account Service - BEREINIGT (keine Duplikate)
  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    image: bankportal-account-service:latest
    container_name: bankportal-account-service
    ports:
      - "${ACCOUNT_SERVICE_PORT:-8082}:8082"
    environment:
      SPRING_PROFILES_ACTIVE: production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin123}
      JWT_SECRET: ${JWT_SECRET:-mysecretkeymysecretkey123456}
      AUTH_SERVICE_URL: http://auth-service:8081
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:4200,http://localhost}

      # Production JVM Settings
      JAVA_OPTS: >-
        -Xms256m -Xmx512m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Dspring.profiles.active=production

      # Logging
      LOGGING_LEVEL_ROOT: WARN
      LOGGING_LEVEL_COM_BANKPORTAL: INFO

      # REDIS FIX: Deaktiviere Redis für Account Service
      MANAGEMENT_HEALTH_REDIS_ENABLED: false
      SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration

    networks:
      - bankportal-network
    depends_on:
      postgres-account:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: bankportal-frontend:latest
    container_name: bankportal-frontend
    ports:
      - "${FRONTEND_PORT:-4200}:80"
    environment:
      NODE_ENV: production
      REACT_APP_AUTH_SERVICE_URL: http://localhost:8081
      REACT_APP_ACCOUNT_SERVICE_URL: http://localhost:8082
    networks:
      - bankportal-network
    depends_on:
      auth-service:
        condition: service_healthy
      account-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: bankportal-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./k8s/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.size=1GB'
      - '--web.max-connections=512'
    networks:
      - bankportal-network
    restart: unless-stopped
    depends_on:
      - auth-service
      - account-service
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: bankportal-grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_SERVER_ROOT_URL: ${GRAFANA_ROOT_URL:-http://localhost:3000}
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_SECURITY_DISABLE_GRAVATAR: true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./k8s/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./k8s/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - bankportal-network
    restart: unless-stopped
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: bankportal-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - bankportal-network
    depends_on:
      - frontend
      - auth-service
      - account-service
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

volumes:
  postgres_auth_data:
    driver: local
  postgres_account_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  bankportal-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
