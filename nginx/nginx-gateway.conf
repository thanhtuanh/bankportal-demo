# üöÄ Bank Portal - API Gateway Configuration
# Comprehensive nginx configuration with all gateway features

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=global_limit:10m rate=200r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Upstream definitions with load balancing
upstream auth_backend {
    least_conn;
    server auth-service:8081 max_fails=3 fail_timeout=30s;
    # server auth-service-2:8081 max_fails=3 fail_timeout=30s; # For scaling
}

upstream account_backend {
    least_conn;
    server account-service:8082 max_fails=3 fail_timeout=30s;
    # server account-service-2:8082 max_fails=3 fail_timeout=30s; # For scaling
}

upstream frontend_backend {
    least_conn;
    server frontend:80 max_fails=3 fail_timeout=30s;
}

# Main server block
server {
    listen 80;
    server_name localhost bankportal.local;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # Global rate limiting
    limit_req zone=global_limit burst=50 nodelay;
    limit_conn conn_limit_per_ip 20;
    
    # CORS Configuration
    location ~* ^/(api|swagger-ui|api-docs) {
        # CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # CORS headers for actual requests
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    # üîê AUTH SERVICE - JWT Authentication & Validation
    location /api/auth/ {
        # Rate limiting for auth endpoints
        limit_req zone=auth_limit burst=5 nodelay;
        
        # JWT validation headers
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
        
        # Standard proxy headers
        proxy_pass http://auth_backend/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    }

    # üíº ACCOUNT SERVICE - Business Logic
    location /api/accounts/ {
        # Rate limiting for API endpoints
        limit_req zone=api_limit burst=20 nodelay;
        
        # JWT validation (internal auth check)
        auth_request /auth-validate;
        auth_request_set $user $upstream_http_x_user;
        auth_request_set $auth_status $upstream_status;
        
        # Pass user info to backend
        proxy_set_header X-User $user;
        proxy_set_header X-Auth-Status $auth_status;
        proxy_set_header Authorization $http_authorization;
        
        # Standard proxy headers
        proxy_pass http://account_backend/api/accounts/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    }

    # üîç Internal auth validation endpoint
    location = /auth-validate {
        internal;
        proxy_pass http://auth_backend/api/auth/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Authorization $http_authorization;
    }

    # üìã SWAGGER DOCUMENTATION
    location /swagger-ui/ {
        # Rate limiting for documentation
        limit_req zone=api_limit burst=10 nodelay;
        
        # Route to appropriate service based on path
        location /swagger-ui/auth/ {
            proxy_pass http://auth_backend/swagger-ui/;
        }
        
        location /swagger-ui/account/ {
            proxy_pass http://account_backend/swagger-ui/;
        }
        
        # Default to auth service swagger
        proxy_pass http://auth_backend/swagger-ui/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # üìä API DOCS
    location /api-docs {
        # Route to appropriate service
        location /api-docs/auth {
            proxy_pass http://auth_backend/api-docs;
        }
        
        location /api-docs/account {
            proxy_pass http://account_backend/api-docs;
        }
        
        # Default to auth service
        proxy_pass http://auth_backend/api-docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # üè• HEALTH CHECKS & MONITORING
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    location /health/auth {
        proxy_pass http://auth_backend/actuator/health;
        access_log off;
    }
    
    location /health/account {
        proxy_pass http://account_backend/actuator/health;
        access_log off;
    }

    # üìä METRICS & MONITORING
    location /metrics {
        # Restrict access to monitoring
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://auth_backend/actuator/metrics;
        proxy_set_header Host $host;
    }

    # üåê FRONTEND - Static Content
    location / {
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://frontend_backend;
        }
        
        # Main frontend
        proxy_pass http://frontend_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SPA fallback
        try_files $uri $uri/ /index.html;
    }

    # üö´ SECURITY - Block common attack patterns
    location ~* \.(env|git|svn|htaccess|htpasswd)$ {
        deny all;
        return 404;
    }
    
    location ~* /(wp-admin|wp-login|admin|phpmyadmin) {
        deny all;
        return 404;
    }

    # üìù LOGGING
    access_log /var/log/nginx/bankportal_access.log combined;
    error_log /var/log/nginx/bankportal_error.log warn;
}

# üîí HTTPS Server (for production)
server {
    listen 443 ssl http2;
    server_name bankportal.local;
    
    # SSL Configuration (placeholder)
    ssl_certificate /etc/ssl/certs/bankportal.crt;
    ssl_certificate_key /etc/ssl/private/bankportal.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Include all the same location blocks as HTTP server
    # (In production, redirect HTTP to HTTPS)
}
